/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* Imports */
/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import api from "@classes/api";
/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* Types */
/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
import type { GetServerSideProps } from "next";
/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* Scripts */
/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
import { getRouteId } from "@scripts/getRouteId";
/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* Page */
/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
import Deals from "@pages/deals";
/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* Server Side Props */
/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
const getServerSideProps: GetServerSideProps = async ({ res, query, locale, locales }) => {
	res.setHeader("Cache-Control", "public, s-maxage=86400, stale-while-revalidate=59");
    const { category, subcategory } = query;
    const searchEngineFilters = {
        categories: 5,
        subcategories1: (category) ? getRouteId(category) : null,
        subcategories2: (subcategory) ? getRouteId(subcategory) : null
    };
	return {
		props: {
			...(await serverSideTranslations(locale || "fr", [ "common", "navbar", "footer", "deals" ])),
			locales,
            filters: await api.getPublicCommons("next", "Landing", locale),
            deals: await api.searchEngine("opportunite", searchEngineFilters, null, null, null, locale)
		}
	};
};
/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* Exports */
/* ------------------------------------------------------------------------------------------------------------------------------------------------ */
export default Deals;
export { getServerSideProps };